Observa√ß√µes Importantes:

A API est√° completa com todas as rotas (GET, POST, PUT, DELETE). Voc√™ pode test√°-la via Postman, Insomnia ou diretamente pelo Swagger.

O Frontend implementa a autentica√ß√£o de usu√°rio. Ap√≥s o login com credenciais v√°lidas, o usu√°rio √© redirecionado para /home onde pode consultar dados via GET.

Usu√°rio e senha est√£o definidos no backend no arquivo TokenService.cs.
O projeto foi desenvolvido em uma estrutura local diferente do template original enviado no desafio, mas todos os requisitos centrais foram abordados.

Gostaria de agradecer a oportunidade de participar do desafio. Foi muito desafiador, enriquecedor e eu adoraria fazer parte da equipe como desenvolvedor web.

Compartilhei a solu√ß√£o do backend no LinkedIn:
üëâ Publica√ß√£o no LinkedIn -
https://www.linkedin.com/posts/pedrofernandxs_dotnet-csharp-backend-activity-7320518629303762945-AQMe/

O desafio √© bastante completo e pode ser que algum detalhe tenha passado despercebido ‚Äî tudo foi feito com muito cuidado e aten√ß√£o.

Este desafio foi uma excelente oportunidade para aplicar conhecimentos t√©cnicos em um cen√°rio realista. Agrade√ßo imensamente a chance e fico √† disposi√ß√£o para conversar mais sobre minha solu√ß√£o ou sobre futuras oportunidades com a Rota das Oficinas.

Atenciosamente,
Pedro Fernandes